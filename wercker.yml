box: wercker/nodejs
build:
  steps:
    - script:
        name: echo nodejs information
        code: |
          echo "node version $(node -v) running"
          echo "npm version $(npm -v) running"
    - npm-install
    - script:
        name: install grunt-cli
        code: sudo npm install -g grunt-cli
    - script:
        name: install sass
        code: sudo gem install sass --no-ri --no-rdoc
    - script:
        name: install graphicsmagick
        code: |
          sudo add-apt-repository ppa:dhor/myway -y
          sudo apt-get update -qq
          sudo apt-get install graphicsmagick -y
    - npm-test
    - script:
        name: update docker
        code: curl -sSL https://get.docker.io/ubuntu/ | sudo sh
    - script:
        name: build image
        code: sudo docker build -t $DOCKER_IMAGE_NAME:$WERCKER_GIT_COMMIT .
    - script:
        name: login to docker hub
        code: sudo docker login -u $DOCKER_USER -p $DOCKER_PASSWORD -e $DOCKER_EMAIL
    - script:
        name: push image
        code: sudo docker push $DOCKER_IMAGE_NAME:$WERCKER_GIT_COMMIT

  after-steps:
    - lotustm/ultimate-slack-notify:
        subdomain: $SLACK_SUBDOMAIN
        token: $SLACK_TOKEN
        channel: $SLACK_CHANNEL
        on: failed

deploy:
  steps:
    - add-ssh-key:
        keyname: SERVER_KEY
    - add-to-known_hosts:
        hostname: $DEPLOY_SERVER
    - mktemp:
        name: temp service file
        envvar: SERVICE_PATH
    - create-file:
        name: service file
        filename: $SERVICE_PATH
        overwrite: true
        content: |
          [Unit]
          Description=Nginx based application
          After=docker.service
          Requires=docker.service
          [Service]
          Restart=always
          TimeoutStartSec=5s
          ExecStartPre=-/usr/bin/docker kill $WERCKER_APPLICATION_NAME
          ExecStartPre=-/usr/bin/docker rm $WERCKER_APPLICATION_NAME
          ExecStart=/usr/bin/docker run --name $WERCKER_APPLICATION_NAME -p 80:80 $DOCKER_IMAGE_NAME:$WERCKER_GIT_COMMIT
          [Install]
          WantedBy=multi-user.target
    - script:
        name: copy service file
        code: scp $SERVICE_PATH core@$DEPLOY_SERVER:/home/core/$WERCKER_APPLICATION_NAME.service
    - script:
        name: login to docker hub
        code: ssh core@$DEPLOY_SERVER docker login -u $DOCKER_USER -p $DOCKER_PASSWORD -e $DOCKER_EMAIL
    - script:
        name: download image
        code: ssh core@$DEPLOY_SERVER docker pull $DOCKER_IMAGE_NAME:$WERCKER_GIT_COMMIT
    - script:
        name: link service file
        code: ssh core@$DEPLOY_SERVER sudo mv /home/core/$WERCKER_APPLICATION_NAME.service /etc/systemd/system/$WERCKER_APPLICATION_NAME.service
    - script:
        name: reload systemd
        code: ssh core@$DEPLOY_SERVER sudo systemctl daemon-reload
    - script:
        name: enable service
        code: ssh core@$DEPLOY_SERVER sudo systemctl enable $WERCKER_APPLICATION_NAME.service
    - script:
        name: restart service
        code: ssh core@$DEPLOY_SERVER sudo systemctl restart $WERCKER_APPLICATION_NAME.service

  after-steps:
    - lotustm/ultimate-slack-notify:
        subdomain: $SLACK_SUBDOMAIN
        token: $SLACK_TOKEN
        channel: $SLACK_CHANNEL